name: Windows

env:
  PYTHONUNBUFFERED: 1

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  ci:
    runs-on: windows-2019
    strategy:
      matrix:
        python-version: [3.7]
        architecture: [x64, x86]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: Setup SDR Drivers
        run: |
          git clone --depth 1 https://gitlab.com/jopohl/sdr_drivers
          if ("$env:PYARCH" -eq "x86") {
          echo "Using 32-bit SDR libraries..."
          Copy-Item "sdr_drivers\win-32.zip" -Destination "C:\windlls.zip"
          }
          else {
          echo "Using 64-bit SDR libraries..."
          Copy-Item "sdr_drivers\win-64.zip" -Destination "C:\windlls.zip"
          }
          Copy-Item "sdr_drivers\*.whl"  -Destination "C:\"
        shell: powershell
        env:
           PYARCH: ${{ matrix.architecture }}


      - name: Install Dependencies
        run: |
          pip install -r data/requirements.txt
          pip install pytest pytest-faulthandler
          pip install --upgrade wheel twine six appdirs packaging setuptools==59.8.0 pyinstaller pywin32 pipwin
          pipwin install pyaudio
          python -c "import tempfile, os; open(os.path.join(tempfile.gettempdir(), 'urh_releasing'), 'w').close()"

      - name: Unzip DLLs
        run: 7z x C:\windlls.zip -osrc\urh\dev\native\lib\shared

      - name: Build Cython Extensions
        run: python src/urh/cythonext/build.py

      - name: Run pytest
        run: pytest -s -v --junitxml=junit/test-results.xml tests

      - name: Build Wheel
        run: python setup.py bdist_wheel

      - name: Build .exe Installer
        run: |
          python data/pyinstaller_helper.py
          for /f %%i in ('python src/urh/version.py') do set URHVERSION=%%i
          iscc /dMyAppVersion=%URHVERSION% /dArch=%PYARCH% data/inno.iss
        shell: cmd
        env:
          PYARCH: ${{ matrix.architecture }}

      - name: Check urh_debug.exe
        run: |
          cd pyinstaller\urh
          urh_debug.exe autoclose
        shell: cmd

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

      - name: Upload to PyPi
        if: startsWith(github.ref, 'refs/tags/')
        run: twine upload --skip-existing dist/*
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
          TWINE_REPOSITORY_URL: "https://upload.pypi.org/legacy/"

      - uses: ncipollo/release-action@v1
        #if: startsWith(github.ref, 'refs/tags/')
        with:
          artifacts: "dist/*.exe"
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          generateReleaseNotes: true
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          tag: test
