name: CI

env:
  PYTHONUNBUFFERED: 1

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-2019, macos-10.15]
        python-version: ['3.7']
        architecture: []
        include:
          - os: windows-2019
            python-version: '3.7'
            architecture: x86
          - os: ubuntu-latest
            python-version: '3.8'
          - os: ubuntu-latest
            python-version: '3.9'
          - os: ubuntu-latest
            python-version: '3.10'

      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: Setup SDR Drivers (Windows)
        if: startsWith(matrix.os, 'windows')
        run: |
          git clone --depth 1 https://gitlab.com/jopohl/sdr_drivers
          if ("$env:PYARCH" -eq "x86") {
          echo "Using 32-bit SDR libraries..."
          7z x "sdr_drivers\win-32.zip" -osrc\urh\dev\native\lib\shared
          }
          else {
          echo "Using 64-bit SDR libraries..."
          7z x "sdr_drivers\win-64.zip" -osrc\urh\dev\native\lib\shared
          }
        shell: powershell
        env:
          PYARCH: ${{ matrix.architecture }}


      - name: Setup SDR Drivers (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          git clone --depth 1 https://gitlab.com/jopohl/sdr_drivers
          mkdir src/urh/dev/native/lib/shared
          tar xf sdr_drivers/osx-64.tar.bz2 -C src/urh/dev/native/lib/shared

      - name: Install Dependencies
        run: |
          pip install wheel
          pip install -r data/requirements.txt
          if [[ $OS == ubuntu* ]]
          then
            sudo apt-get install libhackrf-dev librtlsdr-dev xvfb libxkbcommon-x11-0 x11-utils libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0
            pip install PyVirtualDisplay==0.2.5
          elif [[ $OS == windows* ]]
          then
            pip install pywin32 pipwin
            pipwin install pyaudio
          elif [[ $OS == mac* ]] 
          then
            HOMEBREW_NO_INSTALL_CLEANUP=TRUE brew install airspy hackrf librtlsdr portaudio uhd
            pip install pyaudio
          fi
          pip install twine setuptools pytest pytest-xvfb pytest-cov pytest-faulthandler six appdirs packaging pyinstaller
          python -c "import tempfile, os; open(os.path.join(tempfile.gettempdir(), 'urh_releasing'), 'w').close()"
        shell: bash
        env:
          OS: ${{ matrix.os }}

      - name: Build Cython Extensions
        run: python src/urh/cythonext/build.py

      - name: Create sdist
        if: ${{ matrix.python-version == '3.9' }}
        run: python setup.py sdist

      - run: python setup.py bdist_wheel
        if: ${{ !startsWith(matrix.os, 'ubuntu') }}

      - name: Build manylinux2014
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          docker run --rm \
          -e PYVER=$(python -c "import sys; print('%s%s' % (sys.version_info.major, sys.version_info.minor))") \
          -v `pwd`:/io jopohl/urh_manylinux2014 /io/data/make_manylinux2014_wheels.sh

      - name: Check wheel
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          pip install dist/*.whl
          urh --version
          xvfb-run urh autoclose
          python data/check_native_backends.py
