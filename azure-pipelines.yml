trigger:
- master

jobs:

- job: 'Linux'
  pool:
    vmImage: 'Ubuntu-16.04'
  strategy:
    matrix:
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: |
      python -m pip install --upgrade pip
      pip install -r data/requirements.txt
      sudo apt-get install libhackrf-dev librtlsdr-dev xvfb
      pip install pytest!=4.1 pytest-xdist pytest-xvfb pytest-cov coveralls
    displayName: 'Install dependencies'

  - script: python setup.py build_ext --inplace
    displayName: "Build extensions"

  - script: |
      touch tests/show_gui
      pytest -s --boxed --junitxml=junit/test-results.xml --cov=src/urh --cov-report=xml --cov-report=html --cov-report= --cov-config tests/.coveragerc tests
    displayName: 'pytest with coverage'
    condition: eq(variables['python.version'], '3.6')

  - script: |
      touch tests/show_gui
      pytest -s --boxed --junitxml=junit/test-results.xml tests
    displayName: 'pytest without coverage'
    condition: ne(variables['python.version'], '3.6')

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
      reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'

  - script: |
      coverage combine
      coveralls --rcfile=tests/.coveragerc
    displayName: 'upload to coveralls'
    condition: eq(variables['python.version'], '3.6')

- job: 'Windows'
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      Python35-64:
        python.version: '3.5'
        python.arch: 'x64'
      Python35-32:
        python.version: '3.5'
        python.arch: 'x86'
      Python36-64:
        python.version: '3.6'
        python.arch: 'x64'
      Python36-32:
        python.version: '3.6'
        python.arch: 'x86'
      Python37-64:
        python.version: '3.7'
        python.arch: 'x64'
      Python37-32:
        python.version: '3.7'
        python.arch: 'x86'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: '$(python.arch)'

  - powershell: |
      if ("$(python.arch)" -eq "x86") {$url="https://dl.dropboxusercontent.com/s/ky6prqc0zh4wspm/win-32.zip"} else {$url="https://dl.dropboxusercontent.com/s/3pdvo56amjjm7b7/win-64.zip"}
      Invoke-WebRequest -Uri $url -OutFile "C:\windlls.zip"
    displayName: 'download SDR drivers'

  - script: |
      python -m pip install --upgrade pip
      pip install -r data/requirements.txt
      pip install pytest pytest-faulthandler
    displayName: 'Install dependencies'

  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: 'C:\windlls.zip'
      destinationFolder: src\urh\dev\native\lib\shared
      #cleanDestinationFolder: true

  - script: python setup.py build_ext --inplace
    displayName: "Build extensions"

  - script: pytest --junitxml=junit/test-results.xml -s -v tests
    displayName: 'pytest'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'

- job: 'OSX'
  pool:
    vmImage: 'macOS-10.13'

  strategy:
    matrix:
      Python37:
        python.version: '3.7'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'

  - script: |
      python -m pip install --upgrade pip
      pip install -r data/requirements.txt
      pip install pytest pytest-faulthandler
      brew install hackrf librtlsdr
    displayName: 'Install dependencies'

  - script: python setup.py build_ext --inplace
    displayName: "Build extensions"

  - script: pytest --junitxml=junit/test-results.xml -s -v tests
    displayName: 'pytest'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'
